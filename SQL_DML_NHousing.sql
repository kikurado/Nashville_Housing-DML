--- Keep the YYYY-MM-DD only in the SaleDate

ALTER TABLE NHOUSING
ALTER COLUMN SALEDATE DATE 


--- NOTICED THERE IS DUPLICATE VALUES IN PARCELID, OWNER NAMES
--- SOME OWNERS OWNS MORE THAN 1 PROPERTY THAT HAS SAME PARCELID 

SELECT UNIQUEID,ParcelID,PROPERTYADDRESS,OWNERNAME, DUPLICATES
FROM (
		SELECT  UNIQUEID, LANDUSE, ParcelID, PROPERTYADDRESS,OWNERNAME,ROW_NUMBER() OVER (PARTITION BY ownername ORDER BY ownername) DUPLICATES
		FROM NashvilleHousing.dbo.Nhousing ) T
WHERE DUPLICATES > 1 AND OwnerName IS NOT NULL AND PropertyAddress IS NULL

--- POPULATING THE PROPERTY ADDRESS THAT HAS THE SAME OWNER NAME AND SAME PARCEID
--- CREATING THE LIST OF NULL PROPERTY ADDRESSES THAT NEEDS TO BE FILLED

SELECT A.[UniqueID ],B.[UniqueID ], A.ParcelID, B.ParcelID,A.OwnerName,B.OwnerName, A.PropertyAddress, B.PropertyAddress
FROM Nhousing A
INNER JOIN Nhousing B
ON A.ParcelID = B.ParcelID
WHERE A.PropertyAddress IS NULL AND A.[UniqueID ] != B.[UniqueID ]

-- FILLING THE NULLS
UPDATE A
	SET A.PROPERTYADDRESS = ISNULL(A.PROPERTYADDRESS,B.PROPERTYADDRESS)
FROM Nhousing A
	INNER JOIN Nhousing B
	ON A.ParcelID = B.ParcelID
WHERE A.PropertyAddress IS NULL AND A.[UniqueID ] != B.[UniqueID ]

--- SPLIT PROPERTY ADDRESS INTO ( ADDRESS, CITY)

SELECT SUBSTRING(PROPERTYADDRESS,0,CHARINDEX(',',PROPERTYADDRESS)) AS ADDRESS,
		SUBSTRING(PROPERTYADDRESS,CHARINDEX(',',PROPERTYADDRESS)+1, LEN(PROPERTYADDRESS)) AS CITY
FROM Nhousing

--- CREATING NEW COLUMNS TO HOLD THE NEW VALUES ABOVE
ALTER TABLE NHOUSING
ADD PROPERTY_ADDRESS VARCHAR(255), PROPERTY_CITY VARCHAR(255)

--- UPDATING THE NEW COLUMNS WITH THE NEW VALUES.
UPDATE Nhousing
	SET PROPERTY_ADDRESS = SUBSTRING(PropertyAddress,0,CHARINDEX(',',PROPERTYADDRESS)),
	PROPERTY_CITY = SUBSTRING(PROPERTYADDRESS,CHARINDEX(',',PROPERTYADDRESS)+1,LEN(PROPERTYADDRESS))

---- SPLIT OWNER ADDRESS INTO ( ADDRESS, CITY, STATE )

SELECT SUBSTRING(OWNERADDRESS,0,CHARINDEX(',',OWNERADDRESS)) [owner Split address ],
		PARSENAME(REPLACE(OWNERADDRESS,',','.'),2)[owner split city],
		PARSENAME(REPLACE(OwnerAddress,',','.'),1)[owner split state]
FROM Nhousing


--- creating New columns for the new values
ALTER TABLE NHOUSING
ADD OwnerSplitAddress NVARCHAR(255), OwnerSplitCity NVARCHAR(255), OwnerSplitState NVARCHAR(255)

--- UPDATE THE NEW COLUMNS WITH THE VALUES

UPDATE Nhousing
	SET OwnerSplitAddress = SUBSTRING(OWNERADDRESS,0,CHARINDEX(',',OWNERADDRESS)),
		OwnerSplitCity = PARSENAME(REPLACE(OWNERADDRESS,',','.'),2),
		OwnerSplitState = PARSENAME(REPLACE(OWNERADDRESS,',','.'),1)


--- Noitced SoldAsVacant Column has 'Yes','No','Y','N'
--- The count of 'Y' and 'N' is few compare to 'Yes' and 'No'  so Changing Y and N to Yes and No

SELECT DISTINCT SOLDASVACANT
FROM Nhousing
---------------------------------------------
SELECT COUNT(soldasvacant)
FROM Nhousing
GROUP BY SoldAsVacant
ORDER BY 1
----------------------------------------------
SELECT soldasvacant, 
	CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
		 WHEN SoldAsVacant = 'N' THEN 'No'
		 ELSE SoldAsVacant END AS AdjustedSoldAsVacant
FROM Nhousing

--- Updating the orginal column 'SoldAsVacant' with the Adjusted Values

UPDATE Nhousing
	SET SoldAsVacant = CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
		 WHEN SoldAsVacant = 'N' THEN 'No'
		 ELSE SoldAsVacant END

--- DETECTING THE DUPLICATES
--- FOUND 104 DUPLICATE VALUES!

SELECT *
FROM (
SELECT *, ROW_NUMBER () OVER(
	PARTITION BY parcelID,
				propertyAddress,
				SaleDate,
				SalePrice,
				LegalReference
				ORDER BY 
				UNIQUEID) AS Dups
FROM Nhousing ) TEMP
WHERE Dups > 1

--- DELETING THE DUPLICATE VALUES ( NOT BEST PRACTICE FOR DATA ANALYST ) BUT FOR THE SAKE OF THE TRAINING!

WITH TEMP AS (
SELECT *, ROW_NUMBER () OVER(
	PARTITION BY parcelID,
				propertyAddress,
				SaleDate,
				SalePrice,
				LegalReference
				ORDER BY 
				UNIQUEID) AS Dups
FROM Nhousing )
SELECT *
FROM TEMP
WHERE Dups > 1
---- DELETE DUPLICATES
WITH TEMP AS (
SELECT *, ROW_NUMBER () OVER(
	PARTITION BY parcelID,
				propertyAddress,
				SaleDate,
				SalePrice,
				LegalReference
				ORDER BY 
				UNIQUEID) AS Dups
FROM Nhousing )
DELETE 
FROM TEMP
WHERE Dups >1

------------ DELETE SOME COLUMNS NOT USED ( AGAIN NOT BEST PRACTICE FOR THE DATA ANALYST)
--- BUT FOR THE SAKE OF TRAINING



ALTER TABLE NHOUSING
DROP COLUMN PROPERTYADDRESS, OWNERADDRESS

SELECT *
FROM Nhousing